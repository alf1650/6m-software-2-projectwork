{"ast":null,"code":"var _jsxFileName = \"C:\\\\SCTP\\\\M1\\\\6m-software-2-projectwork\\\\apps\\\\projectwork\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport styles from \"./Search.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport mockAPI from \"../api/mockAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search(_ref) {\n  _s();\n  let {\n    username\n  } = _ref;\n  const navigate = useNavigate();\n  const [countryData, setCountryData] = useState([]);\n  const apiGet = async () => {\n    try {\n      const response = await mockAPI.get(`/countries?&api_key=e6bc2f9624d494ca421477e718736a0b6ec483b4`);\n      console.log(\"response.data\", response.data);\n      setCountryData(response.data.response.countries);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    apiGet();\n  }, []);\n  const handlerSearch = () => {\n    console.log(\"Search\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Hi, ${username}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Where would you like to go?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlerSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"I would like to visit: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCountry,\n        onChange: e => setSelectedCountry(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.country_code,\n          children: country.country_name\n        }, country.country_code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: apiGet,\n        children: \"Get me some info!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"/liAh/0k/M+fqoqCDAKOM56UM6I=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["styles","useNavigate","useState","mockAPI","jsxDEV","_jsxDEV","Search","_ref","_s","username","navigate","countryData","setCountryData","apiGet","response","get","console","log","data","countries","error","message","useEffect","handlerSearch","className","form","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","selectedCountry","onChange","e","setSelectedCountry","target","map","country","country_code","country_name","button","onClick","_c","$RefreshReg$"],"sources":["C:/SCTP/M1/6m-software-2-projectwork/apps/projectwork/src/components/Search.js"],"sourcesContent":["import styles from \"./Search.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport mockAPI from \"../api/mockAPI\";\r\n\r\nfunction Search({ username }) {\r\n  const navigate = useNavigate();\r\n  const [countryData, setCountryData] = useState([]);\r\n\r\n  const apiGet = async () => {\r\n    try {\r\n      const response = await mockAPI.get(`/countries?&api_key=e6bc2f9624d494ca421477e718736a0b6ec483b4`);\r\n      console.log(\"response.data\", response.data);\r\n      setCountryData(response.data.response.countries);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    apiGet();\r\n  }, []);\r\n\r\n  const handlerSearch = () => {\r\n    console.log(\"Search\");\r\n  };\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      <h2>{`Hi, ${username}`}</h2>\r\n      <p> Where would you like to go?</p>\r\n      <form onSubmit={handlerSearch}>\r\n        <label>I would like to visit: </label> \r\n        <select value={selectedCountry} onChange={(e) => setSelectedCountry(e.target.value)}>\r\n          <option value=\"\">Select a country</option>\r\n          {countries.map((country) => (\r\n            <option key={country.country_code} value={country.country_code}>\r\n              {country.country_name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n        <br />\r\n        <button className={styles.button} onClick={apiGet}>Get me some info!</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}