{"ast":null,"code":"var _jsxFileName = \"/Users/jax/Desktop/sctp-projects/6m-software-2-projectwork/apps/projectwork/src/components/userStateContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useReducer } from \"react\";\nimport userStateReducer, { initialState } from \"./userStateReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserStateContext = /*#__PURE__*/createContext(initialState); //creating a context variable with initial state\n\nexport function UserStateProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  //returns a provider of global state value, containing update functions\n  const [state, dispatch] = useReducer(userStateReducer, initialState);\n  const updateUsername = username => {\n    dispatch({\n      type: \"UPDATE_USERNAME\",\n      payload: username\n    });\n  };\n  const updateUserCurrency = currency => {\n    dispatch({\n      type: \"UPDATE_USER_CURRENCY\",\n      payload: currency\n    });\n  };\n  const updateCountry = country => {\n    dispatch({\n      type: \"UPDATE_COUNTRY\",\n      payload: country\n    });\n  };\n  const addFav = fav => {\n    const favArr = [...state.fav, fav];\n    dispatch({\n      type: \"ADD_FAV\",\n      payload: favArr\n    });\n  };\n  const updateFavNotes = (id, input) => {\n    setFavs(favs.map(fav => fav.id === id ? {\n      ...fav,\n      notes: input\n    } : fav));\n    dispatch({\n      type: \"UPDATE_FAV_NOTES\",\n      payload: username\n    });\n  };\n  const deleteFav = newlist => {\n    setFavs(newlist);\n    dispatch({\n      type: \"DELETE_FAV\",\n      payload: username\n    });\n  };\n  const value = {\n    isLoggedIn: state.isLoggedIn,\n    username: state.username,\n    userCurrency: state.userCurrency,\n    selectedCountry: state.selectedCountry,\n    favs: state.favs,\n    updateUsername,\n    updateUserCurrency,\n    updateCountry,\n    addFav,\n    updateFavNotes,\n    deleteFav\n  };\n  return /*#__PURE__*/_jsxDEV(UserStateContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(UserStateProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = UserStateProvider;\nconst useUserState = () => {\n  _s2();\n  const context = useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within UserStateContext\");\n  }\n  return context;\n}; //custom hook to check & error if context is used outside it's provider, instead of allowing 'useContext' calls directly in components\n_s2(useUserState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default useUserState;\nvar _c;\n$RefreshReg$(_c, \"UserStateProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","userStateReducer","initialState","jsxDEV","_jsxDEV","UserStateContext","UserStateProvider","_ref","_s","children","state","dispatch","updateUsername","username","type","payload","updateUserCurrency","currency","updateCountry","country","addFav","fav","favArr","updateFavNotes","id","input","setFavs","favs","map","notes","deleteFav","newlist","value","isLoggedIn","userCurrency","selectedCountry","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserState","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/jax/Desktop/sctp-projects/6m-software-2-projectwork/apps/projectwork/src/components/userStateContext.js"],"sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\nimport userStateReducer, { initialState } from \"./userStateReducer\";\n\nconst UserStateContext = createContext(initialState); //creating a context variable with initial state\n\nexport function UserStateProvider({ children }) { //returns a provider of global state value, containing update functions\n  const [state, dispatch] = useReducer(userStateReducer, initialState);\n\n  const updateUsername = (username) => {\n    dispatch({ type: \"UPDATE_USERNAME\", payload: username})\n  };\n\n  const updateUserCurrency = (currency) => {\n    dispatch({ type: \"UPDATE_USER_CURRENCY\", payload: currency });\n  };\n\n  const updateCountry = (country) => {\n    dispatch({ type: \"UPDATE_COUNTRY\", payload: country });\n  };\n\n  const addFav = (fav) => {\n    const favArr = [...state.fav, fav];\n        dispatch({ type: \"ADD_FAV\", payload: favArr });\n  };\n\n  const updateFavNotes = (id, input) => {\n    setFavs(\n      favs.map((fav) => (fav.id === id ? { ...fav, notes: input } : fav))\n    );\n        dispatch({ type: \"UPDATE_FAV_NOTES\", payload: username });\n  };\n\n  const deleteFav = (newlist) => {\n    setFavs(newlist);\n        dispatch({ type: \"DELETE_FAV\", payload: username });\n  };\n\n  const value = {\n    isLoggedIn: state.isLoggedIn,\n    username: state.username,\n    userCurrency: state.userCurrency,\n    selectedCountry: state.selectedCountry,\n    favs: state.favs,\n    updateUsername,\n    updateUserCurrency,\n    updateCountry,\n    addFav,\n    updateFavNotes,\n    deleteFav\n  };\n\n  return (\n    <UserStateContext.Provider value={value}>\n      {children}\n    </UserStateContext.Provider>\n  );\n}\n\nconst useUserState = () => {\n  const context = useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within UserStateContext\");\n  }\n  return context;\n}; //custom hook to check & error if context is used outside it's provider, instead of allowing 'useContext' calls directly in components\n\nexport default useUserState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}