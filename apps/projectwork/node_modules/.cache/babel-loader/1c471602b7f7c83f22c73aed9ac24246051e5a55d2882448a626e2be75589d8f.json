{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alfredlim/sctp/6m-software-2-projectwork/apps/projectwork/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/alfredlim/sctp/6m-software-2-projectwork/apps/projectwork/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/alfredlim/sctp/6m-software-2-projectwork/apps/projectwork/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import converterAPI from\"../api/converterAPI\";import useUserState from\"../store/userStateContext\";import{jsx as _jsx}from\"react/jsx-runtime\";function CurrencyConverter(){var _useUserState=useUserState(),userCurrency=_useUserState.userCurrency,selectedCountry=_useUserState.selectedCountry;var _useState=useState(\"1\"),_useState2=_slicedToArray(_useState,2),convertedAmount=_useState2[0],setConvertedAmount=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),nativeCurrency=_useState4[0],setNativeCurrency=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),nativeCurrencyName=_useState6[0],setNativeCurrencyName=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isCurrencyLoading=_useState8[0],setIsCurrencyLoading=_useState8[1];var API_KEYS_ARRAY=process.env.REACT_APP_API_KEY.split(\" \");//.env contains string with 2 keys, .split to access\nvar CONVERTER_API_KEY=API_KEYS_ARRAY[1];useEffect(function(){var fetchNativeCurrency=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return converterAPI.get(\"/country\",{headers:{\"X-Api-Key\":CONVERTER_API_KEY},params:{name:\"\".concat(selectedCountry.code)}});case 3:response=_context.sent;if(!response.data[0].currency){_context.next=6;break;}return _context.abrupt(\"return\",response.data[0].currency);case 6:return _context.abrupt(\"return\");case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error(\"Error fetching currency:\",_context.t0);case 12:case\"end\":return _context.stop();}},_callee,null,[[0,9]]);}));return function fetchNativeCurrency(){return _ref.apply(this,arguments);};}();var fetchConvertedAmount=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(fetchedCurrencyCode){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return converterAPI.get(\"/convertcurrency\",{headers:{\"X-Api-Key\":CONVERTER_API_KEY},params:{want:\"\".concat(fetchedCurrencyCode),have:\"\".concat(userCurrency),amount:1}});case 3:response=_context2.sent;return _context2.abrupt(\"return\",response.data.new_amount);case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.error(\"Error fetching currency:\",_context2.t0);case 10:case\"end\":return _context2.stop();}},_callee2,null,[[0,7]]);}));return function fetchConvertedAmount(_x){return _ref2.apply(this,arguments);};}();var currencyConversion=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var fetchedCurrency,_convertedAmount,_convertedAmount2;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0://runs conversion\nsetIsCurrencyLoading(true);_context3.next=3;return fetchNativeCurrency();case 3:fetchedCurrency=_context3.sent;if(!(fetchedCurrency===undefined)){_context3.next=14;break;}_context3.next=7;return fetchConvertedAmount(\"USD\");case 7:_convertedAmount=_context3.sent;setNativeCurrency(\"USD\");setNativeCurrencyName(\"No native currency found\");setConvertedAmount(_convertedAmount);setIsCurrencyLoading(false);_context3.next=21;break;case 14:_context3.next=16;return fetchConvertedAmount(fetchedCurrency.code);case 16:_convertedAmount2=_context3.sent;setNativeCurrency(fetchedCurrency.code);setNativeCurrencyName(fetchedCurrency.name);setConvertedAmount(_convertedAmount2);setIsCurrencyLoading(false);case 21:case\"end\":return _context3.stop();}},_callee3);}));return function currencyConversion(){return _ref3.apply(this,arguments);};}();currencyConversion();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[selectedCountry,userCurrency]);// re-renders on every change of user currency or selected country\nreturn/*#__PURE__*/_jsx(\"h4\",{children:isCurrencyLoading?/*#__PURE__*/_jsx(\"progress\",{}):\"1 \".concat(userCurrency,\" = $ \").concat(convertedAmount,\" \").concat(nativeCurrency,\" (\").concat(nativeCurrencyName.toUpperCase(),\")\")});}export default CurrencyConverter;","map":{"version":3,"names":["useState","useEffect","converterAPI","useUserState","jsx","_jsx","CurrencyConverter","_useUserState","userCurrency","selectedCountry","_useState","_useState2","_slicedToArray","convertedAmount","setConvertedAmount","_useState3","_useState4","nativeCurrency","setNativeCurrency","_useState5","_useState6","nativeCurrencyName","setNativeCurrencyName","_useState7","_useState8","isCurrencyLoading","setIsCurrencyLoading","API_KEYS_ARRAY","process","env","REACT_APP_API_KEY","split","CONVERTER_API_KEY","fetchNativeCurrency","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","headers","params","name","concat","code","sent","data","currency","abrupt","t0","console","error","stop","apply","arguments","fetchConvertedAmount","_ref2","_callee2","fetchedCurrencyCode","_callee2$","_context2","want","have","amount","new_amount","_x","currencyConversion","_ref3","_callee3","fetchedCurrency","_convertedAmount","_convertedAmount2","_callee3$","_context3","undefined","children","toUpperCase"],"sources":["/Users/alfredlim/sctp/6m-software-2-projectwork/apps/projectwork/src/components/CurrencyConverter.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport converterAPI from \"../api/converterAPI\";\nimport useUserState from \"../store/userStateContext\";\n\nfunction CurrencyConverter() {\n  const { userCurrency, selectedCountry } = useUserState();\n  const [convertedAmount, setConvertedAmount] = useState(\"1\");\n  const [nativeCurrency, setNativeCurrency] = useState(\"\");\n  const [nativeCurrencyName, setNativeCurrencyName] = useState(\"\");\n  const [isCurrencyLoading, setIsCurrencyLoading] = useState(false);\n\n  const API_KEYS_ARRAY = process.env.REACT_APP_API_KEY.split(\" \"); //.env contains string with 2 keys, .split to access\n  const CONVERTER_API_KEY = API_KEYS_ARRAY[1];\n\n  useEffect(() => {\n    const fetchNativeCurrency = async () => {\n      //to fetch selected country's native currency\n      try {\n        const response = await converterAPI.get(\"/country\", {\n          headers: { \"X-Api-Key\": CONVERTER_API_KEY },\n          params: {\n            name: `${selectedCountry.code}`,\n          },\n        });\n        if (response.data[0].currency) {\n          return response.data[0].currency;\n        }\n        return;\n      } catch (error) {\n        console.error(\"Error fetching currency:\", error);\n      }\n    };\n\n    const fetchConvertedAmount = async (fetchedCurrencyCode) => {\n      //to fetch converted amount from $1 user currency to selected country's native currency\n      try {\n        const response = await converterAPI.get(\"/convertcurrency\", {\n          headers: { \"X-Api-Key\": CONVERTER_API_KEY },\n          params: {\n            want: `${fetchedCurrencyCode}`,\n            have: `${userCurrency}`,\n            amount: 1,\n          },\n        });\n        return response.data.new_amount;\n      } catch (error) {\n        console.error(\"Error fetching currency:\", error);\n      }\n    };\n\n    const currencyConversion = async () => {\n      //runs conversion\n      setIsCurrencyLoading(true);\n      const fetchedCurrency = await fetchNativeCurrency();\n\n      if (fetchedCurrency === undefined) {\n        const convertedAmount = await fetchConvertedAmount(\"USD\");\n        setNativeCurrency(\"USD\");\n        setNativeCurrencyName(\"No native currency found\");\n        setConvertedAmount(convertedAmount);\n        setIsCurrencyLoading(false);\n      } else {\n        const convertedAmount = await fetchConvertedAmount(\n          fetchedCurrency.code\n        );\n        setNativeCurrency(fetchedCurrency.code);\n        setNativeCurrencyName(fetchedCurrency.name);\n        setConvertedAmount(convertedAmount);\n        setIsCurrencyLoading(false);\n      }\n    };\n\n    currencyConversion();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCountry, userCurrency]); // re-renders on every change of user currency or selected country\n\n  return (\n    <h4>\n      {isCurrencyLoading ? (\n        <progress />\n      ) : (\n        `1 ${userCurrency} = $ ${convertedAmount} ${nativeCurrency} (${nativeCurrencyName.toUpperCase()})`\n      )}\n    </h4>\n  );\n}\n\nexport default CurrencyConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}