{"ast":null,"code":"var _s = $RefreshSig$();\nimport styles from \"./Map.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport coords from \"../api/coords\";\nfunction Map(_ref) {\n  _s();\n  let {\n    searchedCountry\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(false);\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n  useEffect(() => {\n    const apiGetCoords = async () => {\n      setIsLoading(true);\n      try {\n        const response = await coords.get(\n        // `/forward?access_key=${COORDS_API_KEY}&query=Taiwan`\n        `https://geocode.maps.co/search?q=london`);\n        setLat(response.data[0].lat);\n        setLon(response.data[0].lon);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    apiGetCoords();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lat, lon]);\n  const customIcon = new Icon({\n    iconUrl: \"https://cdn-icons-png.flaticon.com/512/447/447031.png\",\n    iconSize: [40, 40]\n  });\n  console.log(lat, lon);\n  return {};\n}\n_s(Map, \"3parU1/4IvV8uWlRCuaw1UNpVys=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["styles","useEffect","useState","MapContainer","TileLayer","Marker","Popup","Icon","coords","Map","_ref","_s","searchedCountry","isLoading","setIsLoading","lat","setLat","lon","setLon","apiGetCoords","response","get","data","error","console","log","message","customIcon","iconUrl","iconSize","_c","$RefreshReg$"],"sources":["/Users/jax/Desktop/sctp-projects/6m-software-2-projectwork/apps/projectwork/src/components/Map.js"],"sourcesContent":["import styles from \"./Map.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport coords from \"../api/coords\";\n\nfunction Map({ searchedCountry }) {\n  const [isLoading, setIsLoading] = useState(false);\n    const [lat, setLat] = useState(\"\");\n    const [lon, setLon] = useState(\"\");\n\n    useEffect(() => {\n      const apiGetCoords = async () => {\n        setIsLoading(true);\n        try {\n          const response = await coords.get(\n            // `/forward?access_key=${COORDS_API_KEY}&query=Taiwan`\n            `https://geocode.maps.co/search?q=london`\n          );\n          setLat(response.data[0].lat);\n          setLon(response.data[0].lon);\n          setIsLoading(false);\n        } catch (error) {\n          console.log(error.message);\n        }\n      };\n      apiGetCoords();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [lat, lon]);\n\n  const customIcon = new Icon({\n    iconUrl: \"https://cdn-icons-png.flaticon.com/512/447/447031.png\",\n    iconSize: [40, 40],\n  });\n          console.log(lat, lon);\n  return (\n{}\n  );\n}\n\nexport default Map;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,SAASC,IAAI,QAAQ,SAAS;AAC9B,OAAO,0BAA0B;AACjC,OAAOC,MAAM,MAAM,eAAe;AAElC,SAASC,GAAGA,CAAAC,IAAA,EAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BL,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMZ,MAAM,CAACa,GAAG;QAC/B;QACC,yCACH,CAAC;QACDL,MAAM,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACP,GAAG,CAAC;QAC5BG,MAAM,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACL,GAAG,CAAC;QAC5BH,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;MAC5B;IACF,CAAC;IACDP,YAAY,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACJ,GAAG,EAAEE,GAAG,CAAC,CAAC;EAEhB,MAAMU,UAAU,GAAG,IAAIpB,IAAI,CAAC;IAC1BqB,OAAO,EAAE,uDAAuD;IAChEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;EACnB,CAAC,CAAC;EACML,OAAO,CAACC,GAAG,CAACV,GAAG,EAAEE,GAAG,CAAC;EAC7B,OACF,CAAC,CAAC;AAEF;AAACN,EAAA,CAhCQF,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}